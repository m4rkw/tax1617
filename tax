#!/usr/bin/ruby

class Numeric
    def to_money
        sprintf('%.2f', self)
    end
end

load "./config.rb"

if ARGV.length == 0
    puts "Usage: tax <dividend>"
    exit 0
end

dividend = ARGV[0].to_f

for i in 0...$shareholders.length
    puts "\n#{$shareholders[i][:name]}\n\n"

    shareholder_dividend = dividend / $shareholders.length
    taxable = shareholder_dividend
    tax = 0

    puts "Dividend: £#{shareholder_dividend.to_money}"

    personal_allowance_for_dividends = ($personal_allowance - $shareholders[i][:salary]) /12

    other_income_monthly = $shareholders[i][:other_income] / 12

    if (other_income_monthly > personal_allowance_for_dividends)
        personal_allowance_for_dividends = 0
        taxable += (other_income_monthly - personal_allowance_for_dividends)
    else
        personal_allowance_for_dividends -= other_income_monthly
    end

    taxable -= personal_allowance_for_dividends

    puts "Tax-free (from personal allowance): £#{personal_allowance_for_dividends.to_money}, leaving £#{taxable.to_money}"

    $taxbands.each do |band|
        if band[:threshold].nil?
            month_applicable = taxable
        else
            month_allowance = band[:threshold] / 12
            month_applicable = [month_allowance, taxable].min
        end

        if band[:rate] >0
            applicable_tax = (month_applicable / 100) * band[:rate]
            tax += applicable_tax
        else
            applicable_tax = 0
        end

        taxable -= month_applicable

        puts "£#{month_applicable.to_money} @ #{band[:rate]}% = #{applicable_tax.to_money}, leaving £#{taxable.to_money}"

    end

    puts "\nTotal tax: £#{tax.to_money}\n\n"
end
